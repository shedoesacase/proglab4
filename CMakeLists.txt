cmake_minimum_required(VERSION 3.10)

if(NOT DEFINED PROJECT_VERSION_MAJOR)
  set(PROJECT_VERSION_MAJOR 0)
endif()

if(NOT DEFINED PROJECT_VERSION_MINOR)
  set(PROJECT_VERSION_MINOR 0)
endif()

if(NOT DEFINED PATCH_VERSION)
  set(PATCH_VERSION 0)
endif()

set(PROJECT_VERSION_PATCH ${PATCH_VERSION})

project(allocators VERSION
    ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH})

configure_file(version.h.in version.h @ONLY) 

add_executable(allocators main.cpp)
target_include_directories(allocators PRIVATE "${CMAKE_BINARY_DIR}")

set(CPACK_PACKAGE_NAME "allocators")
set(CPACK_PACKAGE_VERSION "${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}")

if(WIN32)
  set(CPACK_GENERATOR "ZIP")
elseif(UNIX AND NOT APPLE)
  set(CPACK_GENERATOR "TGZ")
endif()

install(TARGETS allocators DESTINATION bin)

set(CPACK_PACKAGE_NAME "allocators")
set(CPACK_PACKAGE_VERSION "${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}")
set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${CMAKE_SYSTEM_NAME}")
set(CPACK_OUTPUT_FILE_PREFIX "${CMAKE_BINARY_DIR}/package")

include(CPack)